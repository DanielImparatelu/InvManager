package com.github.invmanager.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import com.github.invmanager.dal.Items;
import com.github.invmanager.dal.ItemsDAOImpl;
import java.awt.CardLayout;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
//import javax.swing.AbstractAction;

/*
 * @author Daniel Imparatelu
 * December 2017
 * This is the main interface of the program
 */

public class InventoryGUI extends JFrame implements ActionListener {
	
	private static final long serialVersionUID = 1L;

	Items items = new Items();
	ItemsDAOImpl itemsDAO = new ItemsDAOImpl();

	public void actionPerformed(ActionEvent e) {

		if(e.getSource().equals(addItemByID)) {
			
			itemsDAO.addItem(new Items(006, "TEST213", 10, "2019-02-03", "2018-02-01"));
		}
		
		else if(e.getSource().equals(showAllItems)) {
			for(Items item: itemsDAO.getAllItems() ) {
				textArea.append("item: [ID = "+ item.getItemID()+", Name = "+item.getItemName()+", expiry date = "+item.getItemExpDate()+", last restocked = "+item.getitemLastRestocked()+"]"+"\n\n");
			}
		}
		
		else if(e.getSource().equals(placeOrder)) {
			
		}
		
		else if (e.getSource().equals(showAllUsers)) {
			
		}
		
		else if (e.getSource().equals(getItemByName)) {
			for(Items item: itemsDAO.getItemByName("TEST") ) {
				textArea.append("item: [ID = "+ item.getItemID()+", Name = "+item.getItemName()+", expiry date = "+item.getItemExpDate()+", last restocked = "+item.getitemLastRestocked()+"]"+"\n\n");
			}
		}
	}
	
	private JButton placeOrder = new JButton("Place Order");
	private JButton addItemByID = new JButton("Add Item");
	private JButton showAllItems = new JButton("Show All Items");
	private JButton showAllUsers = new JButton("Show Users");
	private JButton getItemByName = new JButton("Get Item By Name");
	private JButton btnNewButton_5 = new JButton("New button");
	private JButton btnNewButton_6 = new JButton("New button");
	private JScrollPane scrollPane = new JScrollPane();
	private JTextArea textArea = new JTextArea();
	private final JPanel startWindow = new JPanel();
	private final JLabel lblWelcome = new JLabel("Welcome");
	private final JTextField textField = new JTextField();
	private final JPasswordField passwordField = new JPasswordField();


		public InventoryGUI() {

			super();
			setSize(new Dimension(800, 600));
			getContentPane().setBackground(Color.LIGHT_GRAY);
			setTitle("Inventory Management");
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			getContentPane().setLayout(new CardLayout(0, 0));
			
			getContentPane().add(startWindow, "name_80350339024294");
			GridBagLayout gbl_startWindow = new GridBagLayout();
			gbl_startWindow.columnWidths = new int[]{44, 71, 0, 0, 0, 0, 0, 0, 0, 0};
			gbl_startWindow.rowHeights = new int[]{0, 0, 0, 14, 0, 0, 0, 0, 0, 0};
			gbl_startWindow.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
			gbl_startWindow.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
			startWindow.setLayout(gbl_startWindow);
			
			GridBagConstraints gbc_lblWelcome = new GridBagConstraints();
			gbc_lblWelcome.insets = new Insets(0, 0, 5, 5);
			gbc_lblWelcome.fill = GridBagConstraints.HORIZONTAL;
			gbc_lblWelcome.anchor = GridBagConstraints.NORTH;
			gbc_lblWelcome.gridx = 1;
			gbc_lblWelcome.gridy = 3;
			startWindow.add(lblWelcome, gbc_lblWelcome);
			textField.setColumns(10);
			
			GridBagConstraints gbc_textField = new GridBagConstraints();
			gbc_textField.insets = new Insets(0, 0, 5, 5);
			gbc_textField.fill = GridBagConstraints.HORIZONTAL;
			gbc_textField.gridx = 6;
			gbc_textField.gridy = 6;
			startWindow.add(textField, gbc_textField);
			
			GridBagConstraints gbc_passwordField = new GridBagConstraints();
			gbc_passwordField.insets = new Insets(0, 0, 5, 5);
			gbc_passwordField.fill = GridBagConstraints.HORIZONTAL;
			gbc_passwordField.gridx = 6;
			gbc_passwordField.gridy = 7;
			startWindow.add(passwordField, gbc_passwordField);

			final JPanel mainWindow = new JPanel();
			mainWindow.setBackground(Color.LIGHT_GRAY);
			mainWindow.setLayout(null);
			getContentPane().add(mainWindow, "name_80293382047698");
			placeOrder.setBackground(SystemColor.control);

			
			placeOrder.setBounds(0, 11, 113, 30);
			mainWindow.add(placeOrder);
			addItemByID.setBackground(SystemColor.control);

			
			addItemByID.setBounds(0, 52, 113, 30);
			addItemByID.addActionListener(this);
			mainWindow.add(addItemByID);
			showAllItems.setBackground(SystemColor.control);

			
			showAllItems.setBounds(0, 93, 113, 30);
			showAllItems.addActionListener(this);
			mainWindow.add(showAllItems);
			showAllUsers.setBackground(SystemColor.control);

			
			showAllUsers.setBounds(0, 134, 113, 30);
			mainWindow.add(showAllUsers);
			getItemByName.setBackground(SystemColor.control);

			
			getItemByName.setBounds(0, 178, 113, 30);
			getItemByName.addActionListener(this);
			mainWindow.add(getItemByName);
			btnNewButton_5.setBackground(SystemColor.control);

			
			btnNewButton_5.setBounds(0, 219, 113, 30);
			mainWindow.add(btnNewButton_5);
			btnNewButton_6.setBackground(SystemColor.control);

			
			btnNewButton_6.setBounds(0, 265, 113, 30);
			mainWindow.add(btnNewButton_6);

			
			textArea.setBackground(Color.WHITE);
			textArea.setColumns(3);
			textArea.setFont(new Font("Arial", Font.BOLD, 12));
			textArea.setEditable(false);
			scrollPane.setBounds(180, 11, 572, 539);
			mainWindow.add(scrollPane);
			scrollPane.setViewportView(textArea);
		}

	
		



	public static void main(String [] args) {
		InventoryGUI gui = new InventoryGUI();
		gui.setVisible(true);
	}
}
